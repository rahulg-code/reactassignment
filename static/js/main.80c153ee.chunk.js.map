{"version":3,"sources":["react-file-base64.js","App.js","index.js"],"names":["FileBase64","props","state","files","e","target","allFiles","file","i","reader","FileReader","readAsDataURL","onload","fileInfo","name","type","size","Math","round","base64","result","push","length","multiple","onDone","onChange","this","handleChange","bind","React","Component","defaultProps","App","togglePop","setState","seen","handleUpload","selectedFile","handleResponse","isSuccess","message","formData","FormData","append","axios","post","BASE_URL","then","response","status","data","imageUrl","path","catch","err","alert","isLoading","documents","error","fetch","json","fetchDocuments","Fragment","map","docs","documentTitle","documentTypeName","width","Example","Header","useState","show","setShow","handleClose","Button","variant","style","margin","onClick","Modal","onHide","closeButton","Title","Body","placeholder","value","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80c153ee.chunk.js","sourcesContent":["/*! Copyright (c) 2016 Naufal Rabbani (http://github.com/BosNaufal)\n* Licensed Under MIT (http://opensource.org/licenses/MIT)\n*\n* React File Base64 - Version@1.0.0\n*\n*/\n\nimport React from 'react';\n\nexport default class FileBase64 extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n    };\n  }\n\n  handleChange(e) {\n\n    // get the files\n    let files = e.target.files;\n\n    // Process each file\n    var allFiles = [];\n    for (var i = 0; i < files.length; i++) {\n\n      let file = files[i];\n\n      // Make new FileReader\n      let reader = new FileReader();\n\n      // Convert the file to base64 text\n      reader.readAsDataURL(file);\n\n      // on reader load somthing...\n      reader.onload = () => {\n\n        debugger\n        // Make a fileInfo Object\n        let fileInfo = {\n          name: file.name,\n          type: file.type,\n          size: Math.round(file.size / 1000) + ' kB',\n          base64: reader.result,\n          file: file,\n        };\n\n        // Push it to the state\n        allFiles.push(fileInfo);\n\n        // If all files have been proceed\n        if(allFiles.length == files.length){\n          // Apply Callback function\n          if(this.props.multiple) this.props.onDone(allFiles);\n          else this.props.onDone(allFiles[0]);\n        }\n\n      } // reader.onload\n\n    } // for\n\n  }\n\n  render() {\n    return (\n      <input\n        type=\"file\"\n        onChange={ this.handleChange.bind(this) }\n        multiple={ this.props.multiple } />\n    );\n  }\n}\n\nFileBase64.defaultProps = {\n  multiple: false,\n};\n","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { Button, Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport FileBase64 from './react-file-base64';\n\n\n// base url of API\nconst BASE_URL = \"http://localhost:4000/\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null\n      \n    ,isLoading: true,\n    documents: [],\n    error: null,\n    \n    seen: false,\n    \n    files: []\n    };\n  }\n  \n  \n  togglePop = () => {\n    this.setState({\n      seen: !this.state.seen\n    });\n  };\n\n  fetchDocuments() {\n    debugger\n    fetch(`http://52.25.96.244:7044/api/agency/Documents/GetDocumentByUserID?userId=23&key=STAFF`)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          documents: data.data,\n          isLoading: false,\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  \n  componentDidMount() {\n    this.fetchDocuments();\n  }\n\n  // onChangeFile = event => {\n  //   this.setState({ selectedFile: event.target.files[0] });\n  // };\n\n  \n\n  handleUpload = () => {\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select image to upload.\"\n        }\n      });\n      return false;\n    }\n    const formData = new FormData();\n    formData.append(\"dataFile\", selectedFile, selectedFile.name);\n    axios\n      .post(BASE_URL + \"uploadfile\", formData)\n      .then(response => {\n        this.setState({\n          handleResponse: {\n            isSuccess: response.status === 200,\n            message: response.data.message\n          },\n          imageUrl: BASE_URL + response.data.file.path\n        });\n      })\n      .catch(err => {\n        alert(err.message);\n      });\n  };\n\n         \n//   <div>\n//   <div className=\"btn\" onClick={this.togglePop}>\n//     <button>New User?</button>\n//   </div>\n//   {this.state.seen ? <PopUp toggle={this.togglePop} /> : null}\n// </div>\n\n  render() {\n    \n    const { isLoading, documents, error } = this.state;\n    // handleResponse, imageUrl, \n    return (\n      \n      <React.Fragment>\n        <h1>Documents List</h1>\n        \n        {error ? <p>{error.message}</p> : null}\n        \n        <Header />\n        {!isLoading ? (\n          \n          documents.map(docs => {\n            \n            const { documentTitle, documentTypeName } = docs;\n            return (\n              // <div key={url}>url, \n              //   <p>Name: {documentTitle}</p>\n              //   <p>Document Type: {documentTypeName}</p>\n              //   <hr />\n              // </div>\n              \n              <tr>\n              <td width=\"250\">&nbsp;&nbsp;&nbsp;&nbsp;{documentTitle}</td>\n              <td width=\"250\">{documentTypeName}</td>\n              <td>\n              \n      <Example />\n\n       \n      </td>\n            </tr>\n            );\n          })\n        ) : (\n          <h3>Loading...</h3>\n        )}\n      \n        {/* <div className=\"App\">\n          <h4>Image Upload</h4>\n\n          <p className=\"title\">Select Image:</p>\n          <div style={{ marginBottom: 10 }}>\n            <input type=\"file\" onChange={this.onChangeFile} />\n          </div>\n          <input type=\"button\" value=\"Upload\" onClick={this.handleUpload} />\n          {handleResponse && (\n            <p className={handleResponse.isSuccess ? \"success\" : \"error\"}>\n              {handleResponse.message}\n            </p>\n          )}\n\n          <p className=\"title\" style={{ marginTop: 30 }}>\n            Uploaded Image:\n          </p>\n          {imageUrl && (\n            <img src={imageUrl} alt=\"Uploaded File\" height=\"100\" width=\"100\" />\n          )}\n        </div>\n        <h3 style={{ textAlign: \"center\" }}>\n        </h3> */}\n      </React.Fragment>\n  );\n  }\n}\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <table>\n          <tr>\n            <th width=\"180\">Document Name</th>\n            <th width=\"180\">Document Type</th>\n            <th width=\"180\">Upload Document</th>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction Example() {\n  \n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const  uploadDocs = () => \n{\n  var obj = {\n    \"id\": 23,\n    \"userId\": 23,\n    \"base64\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    },\n    \"documentTitle\": \"new\",\n    \"url\": \"string\",\n    \"documentTypeId\": 0,\n    \"documentTypeName\": \"test123\",\n    \"expiration\": \"2020-09-29T13:05:39.766Z\",\n    \"extenstion\": \"string\",\n    \"otherDocumentType\": \"testtype\",\n    \"createdDate\": \"2020-09-29T13:05:39.766Z\",\n    \"key\": \"STAFF\",\n    \"documentTypeIdStaff\": 23,\n    \"fileName\": \"testfile\"\n  }\ndebugger\n  axios\n      .post(\"http://52.25.96.244:7044/api/agency/Documents\", obj)\n      .then(response => {\n        this.setState({\n          handleResponse: {\n            isSuccess: response.status === 200,\n            message: response.data.message\n          }\n        });\n      })\n      .catch(err => {\n        alert(err.message);\n      });\n}\n\n\nconst getFiles = (files) => {\n  this.setState({ files: files })\n}\n\n\n  return (\n    <>\n      <Button variant=\"primary\" style={{margin: '5px'}} onClick={handleShow}>\n                  Upload\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload Documents</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <label>Select Document</label>&nbsp;\n            {/* <input type=\"file\" /> */}\n            \n      <FileBase64\n        multiple={ true }\n        onDone={ getFiles.bind(this) } />\n        <br></br><br></br>\n            <label>Document Title</label>&nbsp;\n            <input type=\"text\" placeholder=\"Document Title\" /><br></br><br></br>\n            <label>Expiration Date</label>&nbsp;\n            <input type=\"date\" placeholder=\"Expiration Date\" /><br></br><br></br>\n            \n            <label>Document Type</label>&nbsp;\n            <select>\n              <option value=\"\">--Select Type--</option>\n              <option value=\"Account File\">Account File</option>\n              <option value=\"Transaction File\">Transaction File</option>\n            </select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={uploadDocs}>\n            Upload Document\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}